{
  "name": "object-assignment",
  "version": "1.0.0",
  "description": "Learning Objectives:\r In this assignment, you'll gain practical experience with TypeScript type aliases, a powerful\r feature for defining object structures. By working with employee data, car details, and colorful\r T-shirts, you'll solidify your understanding of:\r • Type Aliases: Creating custom types to represent complex objects with specific\r properties.\r • Nested Objects: Organizing data within objects using nested structures for hierarchical\r relationships.\r • Union Types: Restricting a property's value to a set of allowed options (e.g., \"Manager\",\r \"Engineer\", \"Intern\").\r • Optional Properties: Allowing for objects with missing properties without causing\r errors.\r • Code Clarity: Employing descriptive variable and function names, comments, and wellstructured code to enhance readability and maintainability.\r The Assignment:\r This assignment is divided into three parts, each focusing on using type aliases to model realworld scenarios:\r ------------------------------------------------------------------------------------------------------------------\r Part 1: Employee Data\r Challenge:\r 1. Design a type alias named Employee to represent an employee object with properties like\r name (string), department (string), and role (string).\r 2. Include an optional nested object named contact to hold phone and email information (if\r provided).\r 3. Employ a union type for the role property to restrict it to \"Manager\", \"Engineer\", or\r \"Intern\".\r 4. Make the skills property an optional array of strings for listing an employee's skills (if\r any).\r --------------------------------------------------------------------------------------------------------------------\r Part 2: Car Details\r Challenge:\r 1. Design a type alias named Car to represent a car object.\r 2. Include a nested object named engine within Car, containing a property named\r horsepower (number).\r 3. Define a function named getHorsepower directly within the Car type alias to retrieve the\r engine's horsepower.\r --------------------------------------------------------------------------------------------------------------------\r Part 3: Colorful T-Shirts\r Challenge:\r 1. Design a type alias named Product to represent a T-shirt object with properties like name\r (string), price (number), and color (string).\r 2. Include a nested object named inventory within Product. This inventory object\r should have two properties:\r o stock (number): Represents the number of T-shirts available.\r o colorOptions (optional array of strings): Lists available colors (if any).\r 3. Inside the inventory object, define a function named changeColor. This function\r accepts a new color string as an argument. When called, it should:\r o Update the color property of the Product object.\r o Adjust the price based on the new color (implement your own logic, e.g.,\r increase by 10% for red, decrease by 5% for blue).\r ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "chalk": "^5.3.0"
  }
}
